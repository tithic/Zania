{"ast":null,"code":"var _jsxFileName = \"/Users/tithichakraborty/Downloads/zania/Zania/src/DataGrid.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sampleData = [{\n  id: 1,\n  name: \"File1\",\n  device: \"Laptop\",\n  path: \"/files/file1\",\n  status: \"Available\"\n}, {\n  id: 2,\n  name: \"File2\",\n  device: \"Tablet\",\n  path: \"/files/file2\",\n  status: \"Unavailable\"\n}, {\n  id: 3,\n  name: \"File3\",\n  device: \"Phone\",\n  path: \"/files/file3\",\n  status: \"Available\"\n}];\nexport default function Datagrid() {\n  _s();\n  const [selectedRows, setSelectedRows] = useState([]);\n  const allAvailable = selectedRows.every(id => {\n    var _sampleData$find;\n    return ((_sampleData$find = sampleData.find(row => row.id === id)) === null || _sampleData$find === void 0 ? void 0 : _sampleData$find.status) === \"Available\";\n  });\n  const handleSelectRow = id => {\n    setSelectedRows(prev => prev.includes(id) ? prev.filter(rowId => rowId !== id) : [...prev, id]);\n  };\n  const handleSelectAll = () => {\n    if (selectedRows.length === sampleData.length) {\n      setSelectedRows([]);\n    } else {\n      setSelectedRows(sampleData.map(row => row.id));\n    }\n  };\n  const isChecked = selectedRows.length === sampleData.length;\n  const isIndeterminate = selectedRows.length > 0 && selectedRows.length < sampleData.length;\n  const handleDownload = () => {\n    alert(\"Selected Rows: \" + JSON.stringify(sampleData.filter(row => selectedRows.includes(row.id)), null, 2));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Datagrid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: isChecked,\n        ref: el => el && (el.indeterminate = isIndeterminate),\n        onChange: handleSelectAll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), selectedRows.length ? `${selectedRows.length} Selected` : \"None Selected\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: 1,\n      cellPadding: \"5\",\n      style: {\n        width: \"100%\",\n        marginTop: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Device\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Path\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sampleData.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedRows.includes(row.id),\n              onChange: () => handleSelectRow(row.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.device\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.path\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [row.status === \"Available\" && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"green\",\n                marginRight: \"5px\"\n              },\n              children: \"\\u25CF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this), row.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)]\n        }, row.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDownload,\n      disabled: !selectedRows.length || !allAvailable,\n      style: {\n        marginTop: \"10px\"\n      },\n      children: \"Download Selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(Datagrid, \"kE+zebKPJPLpKtm4LqE61mD+8P8=\");\n_c = Datagrid;\nvar _c;\n$RefreshReg$(_c, \"Datagrid\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","sampleData","id","name","device","path","status","Datagrid","_s","selectedRows","setSelectedRows","allAvailable","every","_sampleData$find","find","row","handleSelectRow","prev","includes","filter","rowId","handleSelectAll","length","map","isChecked","isIndeterminate","handleDownload","alert","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","ref","el","indeterminate","onChange","border","cellPadding","style","width","marginTop","color","marginRight","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/tithichakraborty/Downloads/zania/Zania/src/DataGrid.tsx"],"sourcesContent":["import { useState } from \"react\";\n\ntype Row = {\n  id: number;\n  name: string;\n  device: string;\n  path: string;\n  status: \"Available\" | \"Unavailable\";\n};\n\nconst sampleData: Row[] = [\n  {\n    id: 1,\n    name: \"File1\",\n    device: \"Laptop\",\n    path: \"/files/file1\",\n    status: \"Available\",\n  },\n  {\n    id: 2,\n    name: \"File2\",\n    device: \"Tablet\",\n    path: \"/files/file2\",\n    status: \"Unavailable\",\n  },\n  {\n    id: 3,\n    name: \"File3\",\n    device: \"Phone\",\n    path: \"/files/file3\",\n    status: \"Available\",\n  },\n];\n\nexport default function Datagrid() {\n  const [selectedRows, setSelectedRows] = useState<number[]>([]);\n  const allAvailable = selectedRows.every(\n    (id) => sampleData.find((row) => row.id === id)?.status === \"Available\"\n  );\n\n  const handleSelectRow = (id: number) => {\n    setSelectedRows((prev) =>\n      prev.includes(id) ? prev.filter((rowId) => rowId !== id) : [...prev, id]\n    );\n  };\n\n  const handleSelectAll = () => {\n    if (selectedRows.length === sampleData.length) {\n      setSelectedRows([]);\n    } else {\n      setSelectedRows(sampleData.map((row) => row.id));\n    }\n  };\n\n  const isChecked = selectedRows.length === sampleData.length;\n  const isIndeterminate =\n    selectedRows.length > 0 && selectedRows.length < sampleData.length;\n\n  const handleDownload = () => {\n    alert(\n      \"Selected Rows: \" +\n        JSON.stringify(\n          sampleData.filter((row) => selectedRows.includes(row.id)),\n          null,\n          2\n        )\n    );\n  };\n\n  return (\n    <div>\n      <h2>Datagrid</h2>\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={isChecked}\n          ref={(el) => el && (el.indeterminate = isIndeterminate)}\n          onChange={handleSelectAll}\n        />\n        {selectedRows.length\n          ? `${selectedRows.length} Selected`\n          : \"None Selected\"}\n      </label>\n      <table\n         border={1}\n        cellPadding=\"5\"\n        style={{ width: \"100%\", marginTop: \"10px\" }}\n      >\n        <thead>\n          <tr>\n            <th></th>\n            <th>Name</th>\n            <th>Device</th>\n            <th>Path</th>\n            <th>Status</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sampleData.map((row) => (\n            <tr key={row.id}>\n              <td>\n                <input\n                  type=\"checkbox\"\n                  checked={selectedRows.includes(row.id)}\n                  onChange={() => handleSelectRow(row.id)}\n                />\n              </td>\n              <td>{row.name}</td>\n              <td>{row.device}</td>\n              <td>{row.path}</td>\n              <td>\n                {row.status === \"Available\" && (\n                  <span style={{ color: \"green\", marginRight: \"5px\" }}>●</span>\n                )}\n                {row.status}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <button\n        onClick={handleDownload}\n        disabled={!selectedRows.length || !allAvailable}\n        style={{ marginTop: \"10px\" }}\n      >\n        Download Selected\n      </button>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}