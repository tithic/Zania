{"ast":null,"code":"var _jsxFileName = \"/Users/tithichakraborty/Downloads/zania/Zania/src/DataGrid.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sampleData = [{\n  name: \"smss.exe\",\n  device: \"Stark\",\n  path: \"\\\\Device\\\\HarddiskVolume2\\\\Windows\\\\System32\\\\smss.exe\",\n  status: \"scheduled\"\n}, {\n  name: \"netsh.exe\",\n  device: \"Targaryen\",\n  path: \"\\\\Device\\\\HarddiskVolume2\\\\Windows\\\\System32\\\\netsh.exe\",\n  status: \"available\"\n}, {\n  name: \"uxtheme.dll\",\n  device: \"Lanniester\",\n  path: \"\\\\Device\\\\HarddiskVolume1\\\\Windows\\\\System32\\\\uxtheme.dll\",\n  status: \"available\"\n}, {\n  name: \"cryptbase.dll\",\n  device: \"Martell\",\n  path: \"\\\\Device\\\\HarddiskVolume1\\\\Windows\\\\System32\\\\cryptbase.dll\",\n  status: \"scheduled\"\n}, {\n  name: \"7za.exe\",\n  device: \"Baratheon\",\n  path: \"\\\\Device\\\\HarddiskVolume1\\\\temp\\\\7za.exe\",\n  status: \"scheduled\"\n}];\nexport default function DataGrid() {\n  _s();\n  const [selectedRows, setSelectedRows] = useState([]);\n  const toggleRow = name => {\n    setSelectedRows(prev => prev.includes(name) ? prev.filter(row => row !== name) : [...prev, name]);\n  };\n  const toggleAll = () => {\n    if (selectedRows.length === sampleData.length) {\n      setSelectedRows([]);\n    } else {\n      setSelectedRows(sampleData.map(row => row.name));\n    }\n  };\n  const isAllSelected = selectedRows.length === sampleData.length;\n  const isSomeSelected = selectedRows.length > 0 && !isAllSelected;\n  const availableSelected = selectedRows.every(name => {\n    var _sampleData$find;\n    return ((_sampleData$find = sampleData.find(row => row.name === name)) === null || _sampleData$find === void 0 ? void 0 : _sampleData$find.status) === \"available\";\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Datagrid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: toggleAll,\n        checked: isAllSelected,\n        ref: el => el && (el.indeterminate = isSomeSelected)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), selectedRows.length > 0 ? `${selectedRows.length} Selected` : \"None Selected\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: 1,\n      style: {\n        width: \"100%\",\n        marginTop: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Device\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Path\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sampleData.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedRows.includes(row.name),\n              onChange: () => toggleRow(row.name)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.device\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.path\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [row.status === \"available\" && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"green\",\n                marginRight: \"5px\"\n              },\n              children: \"\\u2B24\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 48\n            }, this), row.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, row.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => alert(JSON.stringify(selectedRows, null, 2)),\n      disabled: !availableSelected || selectedRows.length === 0,\n      style: {\n        marginTop: \"10px\"\n      },\n      children: \"Download Selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(DataGrid, \"kE+zebKPJPLpKtm4LqE61mD+8P8=\");\n_c = DataGrid;\nvar _c;\n$RefreshReg$(_c, \"DataGrid\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","sampleData","name","device","path","status","DataGrid","_s","selectedRows","setSelectedRows","toggleRow","prev","includes","filter","row","toggleAll","length","map","isAllSelected","isSomeSelected","availableSelected","every","_sampleData$find","find","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","checked","ref","el","indeterminate","border","style","width","marginTop","color","marginRight","onClick","alert","JSON","stringify","disabled","_c","$RefreshReg$"],"sources":["/Users/tithichakraborty/Downloads/zania/Zania/src/DataGrid.tsx"],"sourcesContent":["import { useState } from \"react\";\n\ninterface DataRow {\n  name: string;\n  device: string;\n  path: string;\n  status: string;\n}\n\nconst sampleData: DataRow[] = [\n  { name: \"smss.exe\", device: \"Stark\", path: \"\\\\Device\\\\HarddiskVolume2\\\\Windows\\\\System32\\\\smss.exe\", status: \"scheduled\" },\n  { name: \"netsh.exe\", device: \"Targaryen\", path: \"\\\\Device\\\\HarddiskVolume2\\\\Windows\\\\System32\\\\netsh.exe\", status: \"available\" },\n  { name: \"uxtheme.dll\", device: \"Lanniester\", path: \"\\\\Device\\\\HarddiskVolume1\\\\Windows\\\\System32\\\\uxtheme.dll\", status: \"available\" },\n  { name: \"cryptbase.dll\", device: \"Martell\", path: \"\\\\Device\\\\HarddiskVolume1\\\\Windows\\\\System32\\\\cryptbase.dll\", status: \"scheduled\" },\n  { name: \"7za.exe\", device: \"Baratheon\", path: \"\\\\Device\\\\HarddiskVolume1\\\\temp\\\\7za.exe\", status: \"scheduled\" }\n];\n\nexport default function DataGrid() {\n  const [selectedRows, setSelectedRows] = useState<string[]>([]);\n\n  const toggleRow = (name: string) => {\n    setSelectedRows((prev) =>\n      prev.includes(name) ? prev.filter((row) => row !== name) : [...prev, name]\n    );\n  };\n\n  const toggleAll = () => {\n    if (selectedRows.length === sampleData.length) {\n      setSelectedRows([]);\n    } else {\n      setSelectedRows(sampleData.map((row) => row.name));\n    }\n  };\n\n  const isAllSelected = selectedRows.length === sampleData.length;\n  const isSomeSelected = selectedRows.length > 0 && !isAllSelected;\n\n  const availableSelected = selectedRows.every((name) =>\n    sampleData.find((row) => row.name === name)?.status === \"available\"\n  );\n\n  return (\n    <div>\n      <h2>Datagrid</h2>\n      <label>\n        <input\n          type=\"checkbox\"\n          onChange={toggleAll}\n          checked={isAllSelected}\n          ref={(el) => el && (el.indeterminate = isSomeSelected)}\n        />\n        {selectedRows.length > 0 ? `${selectedRows.length} Selected` : \"None Selected\"}\n      </label>\n      <table border={1} style={{ width: \"100%\", marginTop: \"10px\" }}>\n        <thead>\n          <tr>\n            <th>Checkbox</th>\n            <th>Name</th>\n            <th>Device</th>\n            <th>Path</th>\n            <th>Status</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sampleData.map((row) => (\n            <tr key={row.name}>\n              <td>\n                <input\n                  type=\"checkbox\"\n                  checked={selectedRows.includes(row.name)}\n                  onChange={() => toggleRow(row.name)}\n                />\n              </td>\n              <td>{row.name}</td>\n              <td>{row.device}</td>\n              <td>{row.path}</td>\n              <td>\n                {row.status === \"available\" && <span style={{ color: \"green\", marginRight: \"5px\" }}>⬤</span>}\n                {row.status}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <button\n        onClick={() => alert(JSON.stringify(selectedRows, null, 2))}\n        disabled={!availableSelected || selectedRows.length === 0}\n        style={{ marginTop: \"10px\" }}\n      >\n        Download Selected\n      </button>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}