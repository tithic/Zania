{"ast":null,"code":"var _jsxFileName = \"/Users/tithichakraborty/Downloads/zania/Zania/src/DataGrid.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sampleData = [{\n  name: \"smss.exe\",\n  device: \"Stark\",\n  path: \"\\\\Device\\\\HarddiskVolume2\\\\Windows\\\\System32\\\\smss.exe\",\n  status: \"scheduled\"\n}, {\n  name: \"netsh.exe\",\n  device: \"Targaryen\",\n  path: \"\\\\Device\\\\HarddiskVolume2\\\\Windows\\\\System32\\\\netsh.exe\",\n  status: \"available\"\n}, {\n  name: \"uxtheme.dll\",\n  device: \"Lanniester\",\n  path: \"\\\\Device\\\\HarddiskVolume1\\\\Windows\\\\System32\\\\uxtheme.dll\",\n  status: \"available\"\n}, {\n  name: \"cryptbase.dll\",\n  device: \"Martell\",\n  path: \"\\\\Device\\\\HarddiskVolume1\\\\Windows\\\\System32\\\\cryptbase.dll\",\n  status: \"scheduled\"\n}, {\n  name: \"7za.exe\",\n  device: \"Baratheon\",\n  path: \"\\\\Device\\\\HarddiskVolume1\\\\temp\\\\7za.exe\",\n  status: \"scheduled\"\n}];\nconst DataGrid = () => {\n  _s();\n  const [selectedRows, setSelectedRows] = useState([]);\n  const toggleRowSelection = name => {\n    setSelectedRows(prev => prev.includes(name) ? prev.filter(item => item !== name) : [...prev, name]);\n  };\n  const toggleSelectAll = () => {\n    if (selectedRows.length === sampleData.length) {\n      setSelectedRows([]);\n    } else {\n      setSelectedRows(sampleData.map(item => item.name));\n    }\n  };\n  const isIndeterminate = selectedRows.length > 0 && selectedRows.length < sampleData.length;\n  const canDownload = selectedRows.every(name => {\n    var _sampleData$find;\n    return ((_sampleData$find = sampleData.find(item => item.name === name)) === null || _sampleData$find === void 0 ? void 0 : _sampleData$find.status) === \"available\";\n  });\n  const handleDownload = () => {\n    const downloadedItems = sampleData.filter(item => selectedRows.includes(item.name)).map(item => `Name: ${item.name} Device: ${item.device} Path: ${item.path}`).join(\"\\n\");\n    alert(`Downloaded Items\\n${downloadedItems}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Datagrid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: selectedRows.length === sampleData.length,\n        onChange: toggleSelectAll,\n        ref: el => el && (el.indeterminate = isIndeterminate)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), selectedRows.length ? `${selectedRows.length} Selected` : \"None Selected\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: 1,\n      cellPadding: 5,\n      style: {\n        borderCollapse: \"collapse\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Device\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Path\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sampleData.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedRows.includes(item.name),\n              onChange: () => toggleRowSelection(item.name)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.device\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.path\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [item.status === \"available\" && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"green\"\n              },\n              children: \"\\u25CF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 49\n            }, this), \" \", item.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, item.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDownload,\n      disabled: selectedRows.length < sampleData.length,\n      children: \"Download Selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(DataGrid, \"kE+zebKPJPLpKtm4LqE61mD+8P8=\");\n_c = DataGrid;\nexport default DataGrid;\nvar _c;\n$RefreshReg$(_c, \"DataGrid\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","sampleData","name","device","path","status","DataGrid","_s","selectedRows","setSelectedRows","toggleRowSelection","prev","includes","filter","item","toggleSelectAll","length","map","isIndeterminate","canDownload","every","_sampleData$find","find","handleDownload","downloadedItems","join","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","ref","el","indeterminate","border","cellPadding","style","borderCollapse","width","color","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/tithichakraborty/Downloads/zania/Zania/src/DataGrid.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\ninterface DataItem {\n  name: string;\n  device: string;\n  path: string;\n  status: string;\n}\n\nconst sampleData: DataItem[] = [\n  { name: \"smss.exe\", device: \"Stark\", path: \"\\\\Device\\\\HarddiskVolume2\\\\Windows\\\\System32\\\\smss.exe\", status: \"scheduled\" },\n  { name: \"netsh.exe\", device: \"Targaryen\", path: \"\\\\Device\\\\HarddiskVolume2\\\\Windows\\\\System32\\\\netsh.exe\", status: \"available\" },\n  { name: \"uxtheme.dll\", device: \"Lanniester\", path: \"\\\\Device\\\\HarddiskVolume1\\\\Windows\\\\System32\\\\uxtheme.dll\", status: \"available\" },\n  { name: \"cryptbase.dll\", device: \"Martell\", path: \"\\\\Device\\\\HarddiskVolume1\\\\Windows\\\\System32\\\\cryptbase.dll\", status: \"scheduled\" },\n  { name: \"7za.exe\", device: \"Baratheon\", path: \"\\\\Device\\\\HarddiskVolume1\\\\temp\\\\7za.exe\", status: \"scheduled\" }\n];\n\nconst DataGrid: React.FC = () => {\n  const [selectedRows, setSelectedRows] = useState<string[]>([]);\n\n  const toggleRowSelection = (name: string) => {\n    setSelectedRows(prev =>\n      prev.includes(name) ? prev.filter(item => item !== name) : [...prev, name]\n    );\n  };\n\n  const toggleSelectAll = () => {\n    if (selectedRows.length === sampleData.length) {\n      setSelectedRows([]);\n    } else {\n      setSelectedRows(sampleData.map(item => item.name));\n    }\n  };\n\n  const isIndeterminate = selectedRows.length > 0 && selectedRows.length < sampleData.length;\n  const canDownload = selectedRows.every(name => sampleData.find(item => item.name === name)?.status === \"available\");\n\n  const handleDownload = () => {\n    const downloadedItems = sampleData\n      .filter(item => selectedRows.includes(item.name))\n      .map(item => `Name: ${item.name} Device: ${item.device} Path: ${item.path}`)\n      .join(\"\\n\");\n    alert(`Downloaded Items\\n${downloadedItems}`);\n  };\n\n  return (\n    <div>\n      <h2>Datagrid</h2>\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={selectedRows.length === sampleData.length}\n          onChange={toggleSelectAll}\n          ref={el => el && (el.indeterminate = isIndeterminate)}\n        />\n        {selectedRows.length ? `${selectedRows.length} Selected` : \"None Selected\"}\n      </label>\n      <table border={1} cellPadding={5} style={{ borderCollapse: \"collapse\", width: \"100%\" }}>\n        <thead>\n          <tr>\n            <th>Checkbox</th>\n            <th>Name</th>\n            <th>Device</th>\n            <th>Path</th>\n            <th>Status</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sampleData.map(item => (\n            <tr key={item.name}>\n              <td>\n                <input\n                  type=\"checkbox\"\n                  checked={selectedRows.includes(item.name)}\n                  onChange={() => toggleRowSelection(item.name)}\n                />\n              </td>\n              <td>{item.name}</td>\n              <td>{item.device}</td>\n              <td>{item.path}</td>\n              <td>\n                {item.status === \"available\" && <span style={{ color: \"green\" }}>●</span>} {item.status}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <button onClick={handleDownload} disabled={ selectedRows.length < sampleData.length}>\n        Download Selected\n      </button>\n    </div>\n  );\n};\n\nexport default DataGrid;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASxC,MAAMC,UAAsB,GAAG,CAC7B;EAAEC,IAAI,EAAE,UAAU;EAAEC,MAAM,EAAE,OAAO;EAAEC,IAAI,EAAE,wDAAwD;EAAEC,MAAM,EAAE;AAAY,CAAC,EAC1H;EAAEH,IAAI,EAAE,WAAW;EAAEC,MAAM,EAAE,WAAW;EAAEC,IAAI,EAAE,yDAAyD;EAAEC,MAAM,EAAE;AAAY,CAAC,EAChI;EAAEH,IAAI,EAAE,aAAa;EAAEC,MAAM,EAAE,YAAY;EAAEC,IAAI,EAAE,2DAA2D;EAAEC,MAAM,EAAE;AAAY,CAAC,EACrI;EAAEH,IAAI,EAAE,eAAe;EAAEC,MAAM,EAAE,SAAS;EAAEC,IAAI,EAAE,6DAA6D;EAAEC,MAAM,EAAE;AAAY,CAAC,EACtI;EAAEH,IAAI,EAAE,SAAS;EAAEC,MAAM,EAAE,WAAW;EAAEC,IAAI,EAAE,0CAA0C;EAAEC,MAAM,EAAE;AAAY,CAAC,CAChH;AAED,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAW,EAAE,CAAC;EAE9D,MAAMY,kBAAkB,GAAIR,IAAY,IAAK;IAC3CO,eAAe,CAACE,IAAI,IAClBA,IAAI,CAACC,QAAQ,CAACV,IAAI,CAAC,GAAGS,IAAI,CAACE,MAAM,CAACC,IAAI,IAAIA,IAAI,KAAKZ,IAAI,CAAC,GAAG,CAAC,GAAGS,IAAI,EAAET,IAAI,CAC3E,CAAC;EACH,CAAC;EAED,MAAMa,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIP,YAAY,CAACQ,MAAM,KAAKf,UAAU,CAACe,MAAM,EAAE;MAC7CP,eAAe,CAAC,EAAE,CAAC;IACrB,CAAC,MAAM;MACLA,eAAe,CAACR,UAAU,CAACgB,GAAG,CAACH,IAAI,IAAIA,IAAI,CAACZ,IAAI,CAAC,CAAC;IACpD;EACF,CAAC;EAED,MAAMgB,eAAe,GAAGV,YAAY,CAACQ,MAAM,GAAG,CAAC,IAAIR,YAAY,CAACQ,MAAM,GAAGf,UAAU,CAACe,MAAM;EAC1F,MAAMG,WAAW,GAAGX,YAAY,CAACY,KAAK,CAAClB,IAAI;IAAA,IAAAmB,gBAAA;IAAA,OAAI,EAAAA,gBAAA,GAAApB,UAAU,CAACqB,IAAI,CAACR,IAAI,IAAIA,IAAI,CAACZ,IAAI,KAAKA,IAAI,CAAC,cAAAmB,gBAAA,uBAA3CA,gBAAA,CAA6ChB,MAAM,MAAK,WAAW;EAAA,EAAC;EAEnH,MAAMkB,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,eAAe,GAAGvB,UAAU,CAC/BY,MAAM,CAACC,IAAI,IAAIN,YAAY,CAACI,QAAQ,CAACE,IAAI,CAACZ,IAAI,CAAC,CAAC,CAChDe,GAAG,CAACH,IAAI,IAAI,SAASA,IAAI,CAACZ,IAAI,YAAYY,IAAI,CAACX,MAAM,UAAUW,IAAI,CAACV,IAAI,EAAE,CAAC,CAC3EqB,IAAI,CAAC,IAAI,CAAC;IACbC,KAAK,CAAC,qBAAqBF,eAAe,EAAE,CAAC;EAC/C,CAAC;EAED,oBACExB,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAA2B,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjB/B,OAAA;MAAA2B,QAAA,gBACE3B,OAAA;QACEgC,IAAI,EAAC,UAAU;QACfC,OAAO,EAAEzB,YAAY,CAACQ,MAAM,KAAKf,UAAU,CAACe,MAAO;QACnDkB,QAAQ,EAAEnB,eAAgB;QAC1BoB,GAAG,EAAEC,EAAE,IAAIA,EAAE,KAAKA,EAAE,CAACC,aAAa,GAAGnB,eAAe;MAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CAAC,EACDvB,YAAY,CAACQ,MAAM,GAAG,GAAGR,YAAY,CAACQ,MAAM,WAAW,GAAG,eAAe;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE,CAAC,eACR/B,OAAA;MAAOsC,MAAM,EAAE,CAAE;MAACC,WAAW,EAAE,CAAE;MAACC,KAAK,EAAE;QAAEC,cAAc,EAAE,UAAU;QAAEC,KAAK,EAAE;MAAO,CAAE;MAAAf,QAAA,gBACrF3B,OAAA;QAAA2B,QAAA,eACE3B,OAAA;UAAA2B,QAAA,gBACE3B,OAAA;YAAA2B,QAAA,EAAI;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjB/B,OAAA;YAAA2B,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACb/B,OAAA;YAAA2B,QAAA,EAAI;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACf/B,OAAA;YAAA2B,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACb/B,OAAA;YAAA2B,QAAA,EAAI;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACR/B,OAAA;QAAA2B,QAAA,EACG1B,UAAU,CAACgB,GAAG,CAACH,IAAI,iBAClBd,OAAA;UAAA2B,QAAA,gBACE3B,OAAA;YAAA2B,QAAA,eACE3B,OAAA;cACEgC,IAAI,EAAC,UAAU;cACfC,OAAO,EAAEzB,YAAY,CAACI,QAAQ,CAACE,IAAI,CAACZ,IAAI,CAAE;cAC1CgC,QAAQ,EAAEA,CAAA,KAAMxB,kBAAkB,CAACI,IAAI,CAACZ,IAAI;YAAE;cAAA0B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/C;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACL/B,OAAA;YAAA2B,QAAA,EAAKb,IAAI,CAACZ;UAAI;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACpB/B,OAAA;YAAA2B,QAAA,EAAKb,IAAI,CAACX;UAAM;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACtB/B,OAAA;YAAA2B,QAAA,EAAKb,IAAI,CAACV;UAAI;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACpB/B,OAAA;YAAA2B,QAAA,GACGb,IAAI,CAACT,MAAM,KAAK,WAAW,iBAAIL,OAAA;cAAMwC,KAAK,EAAE;gBAAEG,KAAK,EAAE;cAAQ,CAAE;cAAAhB,QAAA,EAAC;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,EAAC,GAAC,EAACjB,IAAI,CAACT,MAAM;UAAA;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrF,CAAC;QAAA,GAbEjB,IAAI,CAACZ,IAAI;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAcd,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACR/B,OAAA;MAAQ4C,OAAO,EAAErB,cAAe;MAACsB,QAAQ,EAAGrC,YAAY,CAACQ,MAAM,GAAGf,UAAU,CAACe,MAAO;MAAAW,QAAA,EAAC;IAErF;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACxB,EAAA,CA3EID,QAAkB;AAAAwC,EAAA,GAAlBxC,QAAkB;AA6ExB,eAAeA,QAAQ;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}