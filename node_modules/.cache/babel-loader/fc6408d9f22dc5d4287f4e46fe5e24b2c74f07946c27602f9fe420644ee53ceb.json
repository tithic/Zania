{"ast":null,"code":"var _jsxFileName = \"/Users/tithichakraborty/Downloads/zania/Zania/src/DataGrid.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sampleData = [{\n  name: \"smss.exe\",\n  device: \"Stark\",\n  path: \"\\\\Device\\\\HarddiskVolume2\\\\Windows\\\\System32\\\\smss.exe\",\n  status: \"scheduled\"\n}, {\n  name: \"netsh.exe\",\n  device: \"Targaryen\",\n  path: \"\\\\Device\\\\HarddiskVolume2\\\\Windows\\\\System32\\\\netsh.exe\",\n  status: \"available\"\n}, {\n  name: \"uxtheme.dll\",\n  device: \"Lanniester\",\n  path: \"\\\\Device\\\\HarddiskVolume1\\\\Windows\\\\System32\\\\uxtheme.dll\",\n  status: \"available\"\n}, {\n  name: \"cryptbase.dll\",\n  device: \"Martell\",\n  path: \"\\\\Device\\\\HarddiskVolume1\\\\Windows\\\\System32\\\\cryptbase.dll\",\n  status: \"scheduled\"\n}, {\n  name: \"7za.exe\",\n  device: \"Baratheon\",\n  path: \"\\\\Device\\\\HarddiskVolume1\\\\temp\\\\7za.exe\",\n  status: \"scheduled\"\n}];\nconst Datagrid = () => {\n  _s();\n  const [selectedRows, setSelectedRows] = useState([]);\n  const handleRowSelection = name => {\n    setSelectedRows(prev => prev.includes(name) ? prev.filter(row => row !== name) : [...prev, name]);\n  };\n  const allAvailable = selectedRows.every(name => sampleData.find(row => row.name === name && row.status === \"available\"));\n  const handleSelectAll = () => {\n    if (selectedRows.length === sampleData.length) {\n      setSelectedRows([]);\n    } else {\n      setSelectedRows(sampleData.map(row => row.name));\n    }\n  };\n  const getCheckboxState = () => {\n    if (selectedRows.length === 0) return false;\n    if (selectedRows.length === sampleData.length) return true;\n    return \"indeterminate\";\n  };\n  const handleDownload = () => {\n    alert(JSON.stringify(sampleData.filter(row => selectedRows.includes(row.name)), null, 2));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Datagrid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: getCheckboxState() === true,\n        ref: el => el && (el.indeterminate = getCheckboxState() === \"indeterminate\"),\n        onChange: handleSelectAll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), selectedRows.length === 0 ? \"None Selected\" : `${selectedRows.length} Selected`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: 1,\n      cellPadding: \"5\",\n      style: {\n        width: \"100%\",\n        marginTop: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Device\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Path\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sampleData.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedRows.includes(row.name),\n              onChange: () => handleRowSelection(row.name),\n              disabled: row.status !== \"available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.device\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.path\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: row.status === \"available\" ? \"green\" : \"black\"\n              },\n              children: [\"\\u25CF \", row.status]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, row.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDownload,\n      disabled: selectedRows.length === 0 || !allAvailable,\n      children: \"Download Selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Datagrid, \"kE+zebKPJPLpKtm4LqE61mD+8P8=\");\n_c = Datagrid;\nexport default Datagrid;\nvar _c;\n$RefreshReg$(_c, \"Datagrid\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","sampleData","name","device","path","status","Datagrid","_s","selectedRows","setSelectedRows","handleRowSelection","prev","includes","filter","row","allAvailable","every","find","handleSelectAll","length","map","getCheckboxState","handleDownload","alert","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","ref","el","indeterminate","onChange","border","cellPadding","style","width","marginTop","disabled","color","onClick","_c","$RefreshReg$"],"sources":["/Users/tithichakraborty/Downloads/zania/Zania/src/DataGrid.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst sampleData = [\n  { name: \"smss.exe\", device: \"Stark\", path: \"\\\\Device\\\\HarddiskVolume2\\\\Windows\\\\System32\\\\smss.exe\", status: \"scheduled\" },\n  { name: \"netsh.exe\", device: \"Targaryen\", path: \"\\\\Device\\\\HarddiskVolume2\\\\Windows\\\\System32\\\\netsh.exe\", status: \"available\" },\n  { name: \"uxtheme.dll\", device: \"Lanniester\", path: \"\\\\Device\\\\HarddiskVolume1\\\\Windows\\\\System32\\\\uxtheme.dll\", status: \"available\" },\n  { name: \"cryptbase.dll\", device: \"Martell\", path: \"\\\\Device\\\\HarddiskVolume1\\\\Windows\\\\System32\\\\cryptbase.dll\", status: \"scheduled\" },\n  { name: \"7za.exe\", device: \"Baratheon\", path: \"\\\\Device\\\\HarddiskVolume1\\\\temp\\\\7za.exe\", status: \"scheduled\" }\n];\n\nconst Datagrid = () => {\n  const [selectedRows, setSelectedRows] = useState([]);\n\n  const handleRowSelection = (name) => {\n    setSelectedRows((prev) =>\n      prev.includes(name) ? prev.filter((row) => row !== name) : [...prev, name]\n    );\n  };\n\n  const allAvailable = selectedRows.every((name) =>\n    sampleData.find((row) => row.name === name && row.status === \"available\")\n  );\n\n  const handleSelectAll = () => {\n    if (selectedRows.length === sampleData.length) {\n      setSelectedRows([]);\n    } else {\n      setSelectedRows(sampleData.map((row) => row.name));\n    }\n  };\n\n  const getCheckboxState = () => {\n    if (selectedRows.length === 0) return false;\n    if (selectedRows.length === sampleData.length) return true;\n    return \"indeterminate\";\n  };\n\n  const handleDownload = () => {\n    alert(JSON.stringify(\n      sampleData.filter((row) => selectedRows.includes(row.name)),\n      null,\n      2\n    ));\n  };\n\n  return (\n    <div>\n      <h2>Datagrid</h2>\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={getCheckboxState() === true}\n          ref={(el) => el && (el.indeterminate = getCheckboxState() === \"indeterminate\")}\n          onChange={handleSelectAll}\n        />\n        {selectedRows.length === 0\n          ? \"None Selected\"\n          : `${selectedRows.length} Selected`}\n      </label>\n      <table border={1} cellPadding=\"5\" style={{ width: \"100%\", marginTop: \"10px\" }}>\n        <thead>\n          <tr>\n            <th>Checkbox</th>\n            <th>Name</th>\n            <th>Device</th>\n            <th>Path</th>\n            <th>Status</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sampleData.map((row) => (\n            <tr key={row.name}>\n              <td>\n                <input\n                  type=\"checkbox\"\n                  checked={selectedRows.includes(row.name)}\n                  onChange={() => handleRowSelection(row.name)}\n                  disabled={row.status !== \"available\"}\n                />\n              </td>\n              <td>{row.name}</td>\n              <td>{row.device}</td>\n              <td>{row.path}</td>\n              <td>\n                <span style={{ color: row.status === \"available\" ? \"green\" : \"black\" }}>\n                  &#9679; {row.status}\n                </span>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <button onClick={handleDownload} disabled={selectedRows.length === 0 || !allAvailable}>\n        Download Selected\n      </button>\n    </div>\n  );\n};\n\nexport default Datagrid;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}